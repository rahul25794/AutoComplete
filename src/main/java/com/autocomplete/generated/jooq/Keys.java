/*
 * This file is generated by jOOQ.
 */
package com.autocomplete.generated.jooq;


import com.autocomplete.generated.jooq.tables.Country;
import com.autocomplete.generated.jooq.tables.records.CountryRecord;

import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>test</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CountryRecord, Integer> IDENTITY_COUNTRY = Identities0.IDENTITY_COUNTRY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = UniqueKeys0.KEY_COUNTRY_PRIMARY;
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_NAME_UNIQUE = UniqueKeys0.KEY_COUNTRY_NAME_UNIQUE;
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_CODE_UNIQUE = UniqueKeys0.KEY_COUNTRY_CODE_UNIQUE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CountryRecord, Integer> IDENTITY_COUNTRY = Internal.createIdentity(Country.COUNTRY, Country.COUNTRY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = Internal.createUniqueKey(Country.COUNTRY, "KEY_Country_PRIMARY", Country.COUNTRY.ID, Country.COUNTRY.NAME, Country.COUNTRY.CODE);
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_NAME_UNIQUE = Internal.createUniqueKey(Country.COUNTRY, "KEY_Country_name_UNIQUE", Country.COUNTRY.NAME);
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_CODE_UNIQUE = Internal.createUniqueKey(Country.COUNTRY, "KEY_Country_code_UNIQUE", Country.COUNTRY.CODE);
    }
}
